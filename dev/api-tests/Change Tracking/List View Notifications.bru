meta {
  name: List View Notifications
  type: http
  seq: 2
}

get {
  url: {{baseUrl}}/notifications/views?tenantId={{tenantId}}&userId={{userId}}&isRead=false&limit=10&offset=0
  body: none
  auth: none
}

params:query {
  tenantId: {{tenantId}}
  userId: {{userId}}
  isRead: false
  limit: 10
  offset: 0
}

tests {
  test("Status is 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Response has notifications array", function() {
    expect(res.getBody()).to.have.property('notifications');
    expect(res.getBody().notifications).to.be.an('array');
  });
  
  test("Response has unread count", function() {
    expect(res.getBody()).to.have.property('unreadCount');
    expect(res.getBody().unreadCount).to.be.a('number');
  });
  
  test("Response has total and hasMore", function() {
    expect(res.getBody()).to.have.property('total');
    expect(res.getBody()).to.have.property('hasMore');
  });
}
